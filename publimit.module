<?php

/**
 * Implementation of hook_perm()
 */
function publimit_perm() {
  return array('set publication limits');
}

function publimit_nodeapi(&$node, $op) {
  if (arg(2) == 'toggle' && $op == 'presave' && $node->type == 'listing') {
    publimit_listing_form_validate(&$node, $op);
  } elseif ($op == 'validate' && $node->type == 'listing') {
    publimit_listing_form_validate(&$node, $op);
  }
}

function publimit_listing_form_validate(&$node, $op) {
  if ($node->status == 1) {
    // Get user's limit
    global $user;
    $limit = node_limit($user);

    // Get number of nodes user currently has published
    $result = db_result(db_query("SELECT COUNT(*) count FROM {node} LEFT JOIN {flag_content} ON node.nid = flag_content.content_id WHERE node.uid = %d AND status = 1 AND node.nid != %d AND type = 'listing' AND flag_content.fid IS NULL", $node->uid, $node->nid));

    // If greater than limit, fail
    if ($result >= $limit) {
      if ($op == 'validate') {
        form_set_error('status', t('Please make another listing private first. Your account is limited to @limit listings.' . arg(0), array('@limit' => $limit)));
      } else {
        $node->publishfail = TRUE;
        $node->status = 0;
      }
    }
  }
}

/**
 * Implementation of hook_menu()
 */
function publimit_menu() {
  $items = array();

  $items['admin/settings/publimit'] = array(
    'title' => 'SGS Listings Limit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('publimit_admin_settings'),
    'access arguments' => array('set publication limits'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function publimit_admin_settings() {
  $roles = user_roles(TRUE);
  $form = array();

  foreach ($roles as $role) {
    $form['publimit_' . str_replace(' ','_',$role)] = array(
      '#type' => 'textfield',
      '#title' => $role,
      '#size' => 5,
      '#maxlength' => 10,
      '#default_value' => variable_get('publimit_' . str_replace(' ','_',$role), ''),
      '#description' => t('Set a node limit for @role users', array('@role' => $role)),
    );
  }

  return system_settings_form($form);

}

/**
 * Implementation of hook_rules_condition_info()
 */
function publimit_rules_condition_info() {
  return array(
    'publimit_condition_node_limit' => array(
      'label' => t('Number of allowed nodes per role or user'),
      'module' => 'Publication Limit',
    ),
  );
}

/*
 * Helper function to determine node limit.
 */
function node_limit($user) {
  $data = unserialize($user->data);

  // Get highest limit
  $limit = 1;
  foreach ($user->roles as $role) {
    $new_limit = variable_get('publimit_' . str_replace(' ','_',$role), 0);
    $new_limit > $limit ? $limit = $new_limit : $limit = $limit;
  }

  // If individual user limit set
  if ($data['publimit_user'] != '') {
    $limit = $data['publimit_user'];
  }

  return $limit;
}

function publimit_condition_node_limit() {
  global $user;
  $limit = node_limit($user);

  db_query('SELECT nid FROM {node} LEFT JOIN {flag_content} ON node.nid = flag_content.content_id WHERE type = "listing" AND node.uid = %d AND flag_content.fid IS NULL', $user->uid);
  if (db_affected_rows() >= $limit) {
    return TRUE;
  }
  return FALSE;
}

function publimit_form_uc_recurring_admin_edit_form_alter(&$form, &$form_state) {
  $rfid = $form['rfid']['#value'];
  $fee = uc_recurring_fee_user_load($rfid);

  $member = user_load($fee->uid);
  $data = unserialize($member->data);

  $form['publimit_user'] = array(
    '#type' => 'textfield',
    '#title' => t('Publication limit'),
    '#description' => t('Individual number of listings this user can create.'),
    '#default_value' => $data['publimit_user'],
    '#size' => 16,
    '#weight' => 0,
  );

  $form['#submit'][] = 'publimit_form_uc_recurring_admin_edit_form_alter_submit';
}

function publimit_form_uc_recurring_admin_edit_form_alter_submit($form, &$form_state) {
  $rfid = $form_state['values']['rfid'];
  $fee = uc_recurring_fee_user_load($rfid);

  $member = user_load($fee->uid);

  user_save($member, array('publimit_user' => $form_state['values']['publimit_user']));
}
